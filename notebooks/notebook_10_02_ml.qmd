---
title: "Regression With Binary and Categorical Variables"
date: "November 16, 2023"
author: "Matt Lawrence"
format: html
---

## Setting Up

We'll use the `hdi.csv` file again today. Load it as a data frame called `hdi` and load the usual packages.

```{r}
#| message: false

library(tidyverse)
hdi <- read_csv("https://raw.githubusercontent.com/mjclawrence/soci385_f23/main/data/hdi/hdi.csv")
```

## Warm Up

The adolescent birth rate (`adolescent_birth_rate`) is the number of births per 1,000 women ages 15-19. The female secondary education rate (`secondary_educ_female`) is the percentage of females ages 25 or older in the population who have completed at least some secondary education. Regress the adolescent birth rate on the female secondary education rate.

### REPLACE THIS LINE WITH YOUR CODE CHUNK ###

```{r}
birthrate_seceduc_model <- 
      lm(adolescent_birth_rate ~ secondary_educ_female,
            data = hdi)

summary(birthrate_seceduc_model)
```

Using this model, find the predicted adolescent birth rate when 90% of female residents of a country complete some secondary education.

### REPLACE THIS LINE WITH YOUR CODE

```{r}
#Model: y = 104.11409 - 0.95477X

104.11409 - 0.95477*90
```

We should be able to locate that prediction on our line:

```{r, echo = FALSE}
birthrate_seceduc_plot <- ggplot(hdi, aes(x = secondary_educ_female,
                                            y = adolescent_birth_rate))
birthrate_seceduc_plot + geom_point() + geom_smooth(method = lm) + 
labs(x = "Female Secondary Education Rate", y = "Adolescent Birth Rate",
      title = "Adolescent Birth Rate and Secondary Education",
      subtitle = "UNHDP, 2021") +
geom_point(x = 90, y = 18.18479, color = "Deep Pink", size = 3)
```



## Binary Independent Variables

Using binary and categorical variables as independent variables in regression models offers alternative ways to find means between groups. 

Before regression, how would you compare the mean adolescent birth rate for countries in the highest category of human development (`hdi` >= 80) and the mean adolescent birth rate for all other countries?

### REPLACE THIS LINE WITH YOUR CODE CHUNK ###

```{r}
mean(hdi$adolescent_birth_rate[hdi$hdi>=80])

mean(hdi$adolescent_birth_rate[hdi$hdi<80])
```


What is the difference between these means?

### REPLACE THIS LINE WITH YOUR CODE CHUNK ###

```{r}
62.83333 - 13.50968
```

May be more efficient to create a binary variable, and then use `group_by()` and `summarise()`

```{r}
hdi <- hdi  |> 
  mutate(hdi_rank_hi = ifelse(hdi >= 80, 1, 0))
```

```{r}
hdi |> 
  group_by(hdi_rank_hi) |> 
  summarise(mean(adolescent_birth_rate))
```

And the difference again is 49.324.

Regressing `adolescent_birth_rate` on `hdi_rank_hi` will give us the exact same information: 

```{r}
birthrate_rankhi_model <- 
	lm(adolescent_birth_rate ~ hdi_rank_hi,
		data = hdi)

summary(birthrate_rankhi_model)
```

As with continuous variables, the intercept ($\alpha$) is the mean value of our dependent variable, Y, when our independent variable, X, is 0. The coefficient for our independent variable ($\beta$) is the difference in the mean of our dependent variable between cases with a 0 and 1 for our independent variable.

The t value and p value are for a t-test of the difference with one small change. OLS requires the assumption that the sample variances are equal:

```{r}
t.test(hdi$adolescent_birth_rate[hdi$hdi_rank_hi==1],
       hdi$adolescent_birth_rate[hdi$hdi_rank_hi==0],
       var.equal = TRUE)
```

Use regression to test the significance of the difference in the maternal mortality ratio between countries where higher percentages of females than males completed some secondary education. Use the `maternal_mortality_ratio` variable. Create the education variable; call it `female_more_schl`.

### REPLACE THIS LINE WITH YOUR CODE CHUNK ###

Create the education variable:
```{r, warning = FALSE}
hdi <- hdi |> 
  mutate(female_more_schl = ifelse(secondary_educ_female>secondary_educ_male,1,0))
```

Use the new `female_more_schl` variable in the regression model:
```{r}
summary(lm(maternal_mortality_ratio ~ female_more_schl, data = hdi))
```


## Categorical Independent Variables

When your independent variable has more than one category, one category becomes the *reference group*. The $\alpha$ is the average for that reference group. The coefficients are the differences in means for each other category compared to the reference group. The t-test compares the differences in means to the null hypothesis that the real difference between the reference group and the given category is actually zero.

Create a new variable called `hdi_cat` which has four categories of hdi: 80+, 70-79, 55-69, Less than 55.

```{r}
hdi <- mutate(hdi, hdi_cat = 
      ifelse(hdi >= 80, 1,
      ifelse(hdi >= 70 & hdi < 80, 2,
                ifelse(hdi >= 55 & hdi < 70, 3, 4))))
```

Regress the adolescent birth rate variable on this new hdi categorical variable:

Without factor:
```{r}
birthrate_hdi_model1 <- lm(adolescent_birth_rate ~ hdi_cat, data = hdi)
summary(birthrate_hdi_model1)
```

The above chunk isn't what we want. When a variable has multiple categories, make sure R knows the variable is a factor variable. There are two options for how to do this. 

First, you could use the variable as a factor just for this model:

```{r}
birthrate_hdicat_model2 <- 
lm(adolescent_birth_rate ~ factor(hdi_cat), # Asserts hdi_cat is a factor
      data = hdi)

summary(birthrate_hdicat_model2)
```

Second, you could make the variable a factor in your data frame (and add labels if you want), and then use your factor variable in the model without the need to restate that it is a factor variable:

```{r}
hdi <- mutate(hdi, hdi_cat = factor(hdi_cat,
               labels = c("Very High", "High", "Medium" ,"Low")))

birthrate_hdicat_model3 <- 
lm(adolescent_birth_rate ~ hdi_cat, 
      data = hdi)

summary(birthrate_hdicat_model3)
```

To change the reference group, use `relevel()`. In this example, we will make the "Low" category the reference group:

```{r}
hdi$hdi_cat <- 
      relevel(hdi$hdi_cat, ref = "Low")

birthrate_hdi_model4 <- 
lm(adolescent_birth_rate ~ 
      hdi_cat, 
      data = hdi)

summary(birthrate_hdi_model4)
```


## Categorical Dependent Variables

Like a model with a continuous dependent variable, an OLS model with a binary dependent variable estimates the mean of that dependent variable. The mean of a binary variable is the probability of having a 1 for that variable, so this is called a *linear probability model*.

Let's go back to our variable identifying countries where higher percentages of females than males complete some secondary education (`female_more_schl`). Regress this measure on `schooling_mean` which is the average years of schooling completed by a country's residents.

### REPLACE THIS LINE WITH YOUR CODE CHUNK ###

```{r}
femalemore_schooling_model1 <- 
lm(female_more_schl ~ 
      schooling_mean, 
      data = hdi)

summary(femalemore_schooling_model1)
```

We'll wrap up with a model that has categorical dependent and independent variables. Regress `female_more_schl` on `hdi_cat`:

### REPLACE THIS LINE WITH YOUR CODE CHUNK ###

```{r}
femalemore_hdi_model2 <- 
lm(female_more_schl ~ 
      hdi_cat, 
      data = hdi)

summary(femalemore_hdi_model2)
```
